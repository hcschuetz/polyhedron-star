// Hexagonal Antiprism
// -------------------
//
// As in the "hexagonal prism #3", the cut center here is in the center of a
// hexagonal face.  This simplified the modelling but slows down the
// convergence of the constraint solver.  So I took the dihedral angles from
// https://polytope.miraheze.org/wiki/Hexagonal_antiprism. (Set all edge bending
// angles to, say, 30° and activate "autobend" to see the convergence problem.)
{
  starGaps: {
    a: "12h     60°",
    b: "12h 10h 60°",
    c: "10h     60°",
    d: "10h  8h 60°",
    e: " 8h     60°",
    f: " 8h  6h 60°",
    g: " 6h     60°",
    h: " 6h  4h 60°",
    i: " 4h     60°",
    j: " 4h  2h 60°",
    k: " 2h     60°",
    l: " 2h 12h 60°",
  },
  edges: [
    "a", "c", "e", "g", "i", "k",

    "a b c 81.10057°",
    "c d e 81.10057°",
    "e f g 81.10057°",
    "g h i 81.10057°",
    "i j k 81.10057°",
    "k l a 81.10057°",

    "b   d 81.10057°",
    "d   f 81.10057°",
    "f   h 81.10057°",
    "h   j 81.10057°",
    "j   l 81.10057°",
    "l   b 81.10057°",

    "a b 34.77811°",
    "b c 34.77811°",
    "c d 34.77811°",
    "d e 34.77811°",
    "e f 34.77811°",
    "f g 34.77811°",
    "g h 34.77811°",
    "h i 34.77811°",
    "i j 34.77811°",
    "j k 34.77811°",
    "k l 34.77811°",
    "l a 34.77811°",

    "b f 0°",
    "f j 0°",
    "j b 0°",
  ],
  display: {
    bending: 1,
    autobend: false,
    grid: "triangular even",
    grid3: {
      triangles: true,
    }
  }
 }